services:
  mariadb:
    # Builds with custom Docker file 
    # instead of using pre-built image (mariadb:10.11)
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    # Sets a fixed name for the container 
    # instead of auto-generated (srcs_mariadb_1)
    container_name: mariadb
    # Mounts secret files inside the container -> /run/secrets/
    # Secrets not visible in `docker inspect`
    # Passwords init in srcs/requirements/mariadb/tools/mariadb_entrypoint.sh
    secrets:
      - db_password
      - db_root_password
    # Sets environment variables inside the container
    # first looks for .env file, then shell environment variables
    environment:
      - MYSQL_DATABASE=${WORDPRESS_DB_NAME}
      - MYSQL_USER=${WORDPRESS_DB_USER}
      - MYSQL_ADMIN_USER=${WORDPRESS_DB_ADMIN_USER}
    # Port 3306 NOT exposed to host for security
    # Only accessible internally via backend network
    # Creates storage for database data:
    # Data survives container restarts and deletion
    volumes:
      - ${HOME}/data/mariadb:/var/lib/mysql
    # Connects container to a specific network
    # Containers on same network can communicate
    networks:
      - backend
    restart: unless-stopped
  
  wordpress:
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    container_name: wordpress
    depends_on:
      - mariadb
    secrets:
      - db_password
      - db_root_password
      - credentials
    environment:
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_USER_EMAIL=${WORDPRESS_DB_USER_EMAIL}
      - WORDPRESS_DB_ADMIN_USER=${WORDPRESS_DB_ADMIN_USER}
      - WORDPRESS_DB_ADMIN_USER_EMAIL=${WORDPRESS_DB_ADMIN_USER_EMAIL}
      - WORDPRESS_DB_TABLE_PREFIX=${WORDPRESS_DB_TABLE_PREFIX}
      - WORDPRESS_TITLE=${WORDPRESS_TITLE}
      - DOMAIN_NAME=${DOMAIN_NAME}
    # Port 9000 NOT exposed to host
    # Only accessible internally by NGINX via backend network
    volumes:
      - ${HOME}/data/wordpress:/var/www/html
    networks:
      - backend
    restart: unless-stopped

  nginx:
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    container_name: nginx
    depends_on:
      - wordpress
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    # Only NGINX exposes port to host (HTTPS only)
    ports:
      - "443:443"
    volumes:
      - ${HOME}/data/wordpress:/var/www/html
    networks:
      - backend
    restart: unless-stopped


# Defines where Docker finds secret files on the host
secrets:
  credentials:
    file: ../secrets/credentials.txt
  db_password:
    file: ../secrets/db_password.txt
  db_root_password:
    file: ../secrets/db_root_password.txt

# Creates a custom network for containers to communicate   
# Default, isolated network -> bridge
networks:
  backend:
    driver: bridge
